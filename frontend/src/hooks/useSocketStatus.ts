"use client";

import socketManager from "@/services/socketManager";
import { useEffect, useState } from "react";

/**
 * ðŸ”¥ HOOK APENAS PARA STATUS DO SOCKET - OTIMIZADO
 * âœ… NÃƒO registra callbacks (evita conflitos)
 * âœ… Apenas monitora o estado da conexÃ£o
 * âœ… Para ser usado em componentes que sÃ³ precisam saber se estÃ¡ conectado
 * ðŸ”¥ NOVO: Usa estado direto do socketManager sem polling
 */
export function useSocketStatus() {
  // ðŸ”¥ OTIMIZAÃ‡ÃƒO: Estado direto do socketManager
  // âœ… NÃ£o precisa de polling - o socket jÃ¡ gerencia o estado
  const [isConnected, setIsConnected] = useState(() =>
    socketManager.isConnected()
  );

  useEffect(() => {
    // Verificar mudanÃ§as no status do socket periodicamente
    // Como nÃ£o podemos escutar eventos diretamente (para evitar conflitos),
    // fazemos polling leve a cada 500ms
    const interval = setInterval(() => {
      const currentStatus = socketManager.isConnected();
      setIsConnected((prev) => {
        if (prev !== currentStatus) {
          console.log(
            "ðŸ”„ useSocketStatus: Status mudou:",
            prev,
            "->",
            currentStatus
          );
        }
        return currentStatus;
      });
    }, 500); // 500ms Ã© rÃ¡pido o suficiente para ser responsivo

    return () => clearInterval(interval);
  }, []);

  return {
    isConnected,
    stats: socketManager.getStats(),
  };
}

export default useSocketStatus;
